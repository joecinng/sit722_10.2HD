name: 'Terraform Create + Deploy to EKS'

on:
  push:
    paths:
      - 'terraform/*.tf'
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform + Deploy to EKS'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      TF_LOG: DEBUG

       # Variables for Terraform
      VPC_ID: ${{ secrets.VPC_ID }}  # Add your VPC ID secret
      SUBNET_IDS: ${{ secrets.SUBNET_IDS }}  # Comma-separated list of subnet IDs
      EKS_CLUSTER_ROLE_ARN: ${{ secrets.EKS_CLUSTER_ROLE_ARN }}  # IAM role ARN for EKS cluster
      EKS_NODE_ROLE_ARN: ${{ secrets.EKS_NODE_ROLE_ARN }}  # IAM role ARN for EKS node group

    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: |
          cd terraform
          terraform init  

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -refresh=false
        timeout-minutes: 30

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve
        timeout-minutes: 30

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set default.region "us-east-1"

      - name: Get ECR Repository URL
        id: ecr
        run: |
          echo "ECR_URL=$(terraform output -raw sit722_ecr)" >> $GITHUB_ENV

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_URL }}

      # Make build and push scripts executable
      - name: Make build and push scripts executable
        run: |
          chmod +x ./scripts/build-image.sh
          chmod +x ./scripts/push-image.sh

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*\d')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Build the Docker image.
      - name: Build Docker Image
        run: ./scripts/build-image.sh

      # Push Docker image to ECR
      - name: Push Docker Image to ECR
        run: ./scripts/push-image.sh

      # Fetch EKS credentials dynamically
      - name: Get EKS Credentials
        run: |
          aws eks --region us-east-1 update-kubeconfig --name sit722_10_2hd_terraform

      # Optional: If you prefer using a deploy script
      - name: Make deploy script executable
        run: chmod +x ./scripts/deploy.sh

      - name: Deploy via custom script
        run: ./scripts/deploy.sh
